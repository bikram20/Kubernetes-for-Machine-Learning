---
# tasks file for roles/microk8s-cluster-setup
- name: Wait for MicroK8s to be ready
  become: yes
  shell: microk8s status --wait-ready
  when: inventory_hostname == groups['microk8s_cluster'][0]

- name: Gather node information from the first VM
  become: yes
  shell: microk8s kubectl get nodes -o jsonpath="{.items[*].metadata.name}"
  register: cluster_nodes
  when: inventory_hostname == groups['microk8s_cluster'][0]
  run_once: true

- name: Set cluster nodes fact
  set_fact:
    cluster_nodes: "{{ cluster_nodes.stdout }}"
  when: inventory_hostname == groups['microk8s_cluster'][0]
  run_once: true

- name: Check if node is already part of the cluster
  become: yes
  command: /bin/bash -c "echo '{{ cluster_nodes }}' | grep -w $(hostname)"
  register: node_check
  failed_when: node_check.rc != 0 and node_check.rc != 1
  changed_when: false
  when: inventory_hostname != groups['microk8s_cluster'][0]
  ignore_errors: true


- name: Generate join token on the first VM
  become: yes
  shell: microk8s add-node --token-ttl 120
  register: join_command_result
  when: inventory_hostname == groups['microk8s_cluster'][0]
  run_once: true

- name: Debug join command result
  debug:
    var: join_command_result.stdout_lines
  when: inventory_hostname == groups['microk8s_cluster'][0]
  run_once: true

- name: Set join command fact
  become: yes
  set_fact:
    join_command: "{{ join_command_result.stdout_lines[-1] }}"
  when: inventory_hostname == groups['microk8s_cluster'][0]
  run_once: true

- name: Join other VMs to the cluster
  become: yes
  shell: "{{ hostvars[groups['microk8s_cluster'][0]].join_command_result.stdout_lines[1] }}"
  when: >
    inventory_hostname != groups['microk8s_cluster'][0] and
    node_check.rc != 0

- name: Create .kube directory
  file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    mode: '0700'

- name: Generate kubectl config file from MicroK8s
  become: yes
  shell: microk8s config
  register: kubeconfig_content
  changed_when: false

- name: Write kubectl config to file
  copy:
    dest: "{{ ansible_env.HOME }}/.kube/config"
    content: "{{ kubeconfig_content.stdout }}"
    mode: '0700'

- name: Change ownership of .kube directory
  become: yes
  file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    owner: paperspace
    group: paperspace
    recurse: yes

- name: Add paperspace user to the microk8s group
  tags: add_ps_to_k8s_group
  become: yes
  user:
    name: paperspace
    groups: microk8s
    append: yes

- name: Reset connection so paperspace is picked up as part of microk8s
  tags: add_ps_to_k8s_group
  meta: reset_connection
